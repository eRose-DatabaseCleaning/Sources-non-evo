/*
	**	모든 클라이언트의 접속을 유지한다.
		1. 클라이언트의 접속후 케릭터 선택 처리
		1. 케릭 선택후 존 서버로 이동.
		1. 길드챗 처리
		1. 귓말 처리
		1. 친구관리

	**	모든 존 서버의 접속을 유지
		1. 존별 IP/PORT 관리
*/
#include "stdafx.h"
#include "SHO_WS_DLL.h"
#include "SHO_WS_LIB.h"

#pragma	comment	(lib, "WS2_32.LIB")


#ifdef	_DEBUG
	#pragma comment (lib, "util_d.lib") 
	#pragma comment (lib, "d_LIB_Server.lib") 
#else
	#pragma comment (lib, "util_r.lib")
	#pragma comment (lib, "LIB_Server.lib") 
#endif


//---------------------------------------------------------------------------------------
BOOL APIENTRY DllMain( HANDLE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved )
{
    switch (ul_reason_for_call)
	{
		case DLL_PROCESS_ATTACH:
		case DLL_THREAD_ATTACH:
		case DLL_THREAD_DETACH:
		case DLL_PROCESS_DETACH:
			break;
    }
    return TRUE;
}


void WriteLOG (char *szMSG)
{
	;
}


SHO_WS *g_GSApp=NULL;

//---------------------------------------------------------------------------------------
DLL_WS_API bool __stdcall WS_Init (HINSTANCE hInstance, EXE_WS_API *pAPI)
{
	if ( NULL == g_GSApp ) {
		g_GSApp = g_GSApp->InitInstance( hInstance, pAPI );
	}

	return true;
}

//---------------------------------------------------------------------------------------
DLL_WS_API void __stdcall WS_Free ()
{
	if ( g_GSApp )  {
		g_GSApp->Shutdown ();
		g_GSApp->Destroy ();
		g_GSApp = NULL;
	}
}


//---------------------------------------------------------------------------------------
DLL_WS_API bool __stdcall WS_ConnectDB (char *szServerIP, char *szDBName)
{
	#define	DB_USER			"icarus"
	#define	DB_PASSWORD		"1111"

	if ( !g_GSApp->ConnectDB(szServerIP, szDBName, DB_USER, DB_PASSWORD ) ) {
		g_GSApp->Destroy ();
		g_GSApp = NULL;
		return false;
	}

	return true;
}


//---------------------------------------------------------------------------------------
DLL_WS_API bool __stdcall WS_Start(HWND hWnd,
						  char *szWorldNAME,
						  char *szLoginServerIP, int iLoginServerPORT,
						  char *szLogServerIP,	 int iLogServerPORT,
						  int   iZoneListenPORT, int iUserListenPORT)
{
	return g_GSApp->Start( hWnd, 
				szLoginServerIP,	iLoginServerPORT,
				szLogServerIP,		iLogServerPORT,
				szWorldNAME,
				iZoneListenPORT, 
				iUserListenPORT);
}

DLL_WS_API bool __stdcall WS_Active( bool bActive )
{
    return g_GSApp->Active( bActive );
}


//---------------------------------------------------------------------------------------
DLL_WS_API void __stdcall WS_Shutdown ()
{
	if ( g_GSApp )  {
	//	g_GSApp->Shutdown ();
	}
}

//---------------------------------------------------------------------------------------
